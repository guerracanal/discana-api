name: Deploy API to GCP

on:
  push:
    branches:
      - main  # Cambia esto a la rama principal de tu proyecto, si es necesario

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    
    # Verificar la estructura del directorio
    - name: Verify the directory structure
      run: ls -la

    # Checkout del código desde el repositorio
    - name: Checkout code
      uses: actions/checkout@v2

    # Configuración del SDK de Google Cloud
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        version: 'latest'

    # Autenticación con GCP usando las credenciales
    - name: Authenticate to GCP
      uses: google-github-actions/auth@v1  # Usar la versión más reciente
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}

    # Configurar la URI de MongoDB como variable de entorno
    - name: Set environment variable for Mongo URI
      run: echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> $GITHUB_ENV

    # Construir la imagen Docker
    - name: Build Docker image
      run: |
        PROJECT_NAME=discana
        REGION=europe-west1
        API_IMAGE_NAME=discana-api
        API_CONTAINER_NAME=gcr.io/$PROJECT_NAME/$API_IMAGE_NAME
        API_DOCKER_CONTEXT=discana-api  # Aquí se asume que tu código está en la carpeta discana-api

        # Construir y etiquetar la imagen Docker en Google Container Registry
        gcloud builds submit --tag $API_CONTAINER_NAME $API_DOCKER_CONTEXT

    # Desplegar la imagen a Cloud Run
    - name: Deploy to Cloud Run
      run: |
        API_SERVICE_NAME=discana-api
        gcloud run deploy $API_SERVICE_NAME \
          --image gcr.io/$PROJECT_NAME/$API_IMAGE_NAME \
          --region $REGION \
          --platform managed \
          --allow-unauthenticated
